#!/usr/bin/env bash

packages=(${@})


printf -- "================================================================================\n"

printf -- "Attempting to install R-Packages:\n"

outdir="./R-package-installation"

if [ -d ${outdir} ]; then
    rm -rf $outdir
fi

if [ ! -d ${outdir} ]; then
    mkdir -p $outdir
fi

# Install 'remotes' package for versioned installation of other packages
(Rscript -e "library(\"remotes\")" >/dev/null 2>&1) ||
    {
        install_logfile=${outdir}/remotes.install_logfile
        printf "> %-30s %-30s" "remotes" "latest"
        (Rscript -e "install.packages(\"remotes\")" \
            >${install_logfile} 2>&1) &&
            {
                printf -- " ... successful!\n" &&
                    rm -rf ${install_logfile}
            } ||
            {
                retval=$?
                printf -- " ... failed:\n" &&
                    sed -i 's/^/\t/' ${install_logfile} &&
                    cat ${install_logfile} &&
                    exit 1
            }
    }

declare -A pkg_names
declare -A pkg_versions
declare -A pkg_indices

for ((i = 0; i < ${#packages[@]}; i += 2)); do
    pkg_index="$(echo "${packages[$i]}" | sed 's/[^a-zA-Z0-9]/_/g')"
    pkg_names[$pkg_index]="${packages[$i]}"
    pkg_versions[$pkg_index]="${packages[(($i + 1))]}"
    pkg_indices[${pkg_index}]="${pkg_index}"
done

(
    for pkg_index in "${pkg_indices[@]}"; do
        pkg_ver="${pkg_versions[${pkg_index}]}"
        shopt -s nocasematch  
        if [[ "${pkg_ver}" == "latest" || "${pkg_ver}" == "NULL" ]]; then
            pkg_ver_log="latest"
            pkg_ver="NULL"
        else
            pkg_ver_log="${pkg_ver}"
            pkg_ver="\"${pkg_ver}\""
        fi
        shopt -u nocasematch 
        file_stub="${outdir}/${pkg_index}"

        statusfile="${file_stub}.ret"
        install_logfile="${file_stub}.inst"
        logfile="${file_stub}.log"

        {
            printf "> %-30s %-30s" "${pkg_names[${pkg_index}]}" "${pkg_ver_log}"
            {
                Rscript \
                    -e "
                        options(warn=2)
                        remotes::install_version(
                        \"${pkg_names[${pkg_index}]}\",
                        version=${pkg_ver},
                        repos=\"https://cloud.r-project.org\",
                        upgrade=FALSE
                    )
                    "
            } \
                >"${install_logfile}" 2>&1 && :

            retval=$?

            echo "${retval}" >${statusfile}

            if [ ${retval} -ne 0 ]; then
                printf -- " ... failed:\n" &&
                    cat "${install_logfile}" | perl -pe 's/^/\t/'
            else
                printf -- " ... successful!\n" #&& rm -rf ${install_logfile}
            fi
        } >${logfile} 2>&1
    done
) &
(
    # Continuously monitor all install processes.
    # If one finishes:
    #   - print log
    #   - remove log
    #   - exit if status != 0
    while [ ${#pkg_indices[@]} -gt 0 ]; do
        # Identify package(s) that finished installing
        for pkg_index in "${pkg_indices[@]}"; do
            file_stub="${outdir}/${pkg_index}"

            statusfile="${file_stub}.ret"
            logfile="${file_stub}.log"

            if [ -f ${statusfile} ]; then
                sleep 0.25
                status=$(cat "${statusfile}")
                cat "${logfile}"
                unset pkg_indices[${pkg_index}]
                # rm -f "${statusfile}"
                if [ $status -ne 0 ]; then
                    exit $status
                fi
            fi
        done
    done
) || exit $?

wait

rm -rf $outdir

printf -- "================================================================================\n"
